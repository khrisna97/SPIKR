import React from "react";
import AdminHeaderLayout from "../../Component/AdminHeaderLayout";
import {FontAwesomeIcon} from "@fortawesome/react-fontawesome";
import Table from './tables';
import Filter from './Filter';
import {GET, serialize} from "../../api";
import {faSyncAlt} from "@fortawesome/free-solid-svg-icons";
import {Redirect} from "react-router-dom";
import queryString from "querystring";
const Init = {
    data:[],
    loading:true,
    KelompokData:[],
    openModal: false,
    Redirect:"",
};
class Kelompok_management extends React.Component{
    constructor(props, context) {
        super(props, context);
        this.state = Init;
    }
    modalToggle = ()=>{
        this.setState({
            openModal:!this.state.openModal
        })
    };
    Setup=(query = null)=>{
        this.setState({
            loading:true,
        });
        let url = "";
        if (typeof query === "string"){
            // Use link generated by laravel prev , next, last, first page link
            const {path} = this.state;
            url = query.replace(path,'');
        }
        if (typeof query === "object" && query!== null){
            //Use link generated by serialize filter
            url = serialize(query);
        }
        GET('api/kelompok'+url).then(res=>{
            this.setState({...res, loading:false})
        });
    };
    componentDidMount() {
        this.Setup();
    }
    filterHnadler=(data)=>{
        this.Setup(data)
    };
    onPageChange=({page})=>{
        const {current_page,next_page_url,prev_page_url} = this.state;
        if (page+1 > current_page){
            this.Setup(next_page_url);
        }else{
            this.Setup(prev_page_url);
        }
    };
    onRowPageChange=({rowsPerPage})=>{
        this.Setup({per_page:rowsPerPage});
    };
    render() {
        if (this.state.Redirect){
            return <Redirect to={this.state.Redirect} />
        }
        return (
            <AdminHeaderLayout>
                <Filter Handler={this.filterHnadler}/>
                <div className="mt-5">
                    {
                        this.state.data.length && ! this.state.loading? this.renderTable() : this.renderLoader()
                    }`
                </div>
            </AdminHeaderLayout>
        )
    }
    renderTable = ()=>{
        const {data} = this.state;
        const tableProp = {
            ...this.state,
            RowChange:this.onRowPageChange,
            PageChange:this.onPageChange,
            onRowClick:(dt, meta)=>{
                let {id, nama} = data[meta.dataIndex];
                let Redirect = 'kelompok/detail?'+queryString.stringify({id,nama});
                this.setState({
                    Redirect
                });
            }
        };
        return  <Table {...tableProp} />
    };
    renderLoader = ()=>{
      return <div className="row justify-content-center">
          <FontAwesomeIcon className='fa-spin text-white fa-5x' icon={faSyncAlt} />
      </div>
    };
}
export default Kelompok_management